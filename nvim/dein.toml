# View {{{
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  let g:lightline = {'colorscheme': 'solarized',
      \ 'mode_map': {'c': 'NORMAL'},
  \}
'''
#      \ 'active': {
#          \ 'left': [['mode', 'paste'], ['fugitive', 'filename', 'ale']]
#      \ },

[[plugins]]
repo = 'tomasr/molokai'
on_event=['VimEnter']
hook_add = '''
let g:molokai_original = 1
colorscheme molokai
'''
# autocmd myautocmd VimEnter * colorscheme molokai "TODO: transpansy
# set background=dark
# }}} View


#  # Input {{{
#  ##[[plugins]]
#  ##repo = 'Shougo/neocomplete'
#  ##hook_add = '''
#  ##  let g:acp_enableAtStartup = 0
#  ##  let g:neocomplete#enable_at_startup = 1
#  ##  let g:neocomplete#max_list = 5
#  ##  let g:neocomplete#auto_completion_start_length = 3
#  ##  let g:neocomplete#enable_underbar_completion = 0
#  ##  let g:NeoComplete#EnableAtStartup = 1
#  ##'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'honza/vim-snippets'

[[plugins]]
repo = 'Shougo/neosnippet'
depends = ['neosnippet-snippets', 'vim-snippets']
hook_source = '''
  let g:neosnippet#snippets_directory = ['~/.config/nvim/snippets']
  let g:neosnippet#snippets_directory+=['~/.cache/dein/repos/github.com/Shougo/neosnippet-snippets/neosnippets']
  let g:neosnippet#snippets_directory+=['~/.cache/dein/repos/github.com/honza/vim-snippets/snippets']

  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
'''
#  if has('conceal') " For snippet_complete marker.
#    set conceallevel=2 concealcursor=niv
#  endif


[[plugins]]
repo = 'tpope/vim-surround'
# }}} Input


# code check {{{
[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
  let g:ale_linters = {
    "\ 'cpp': [],
    \ 'python': ['pylint', 'flake8', 'mypy'],
    \ 'haskell': []
  \}
  let g:ale_c_clang_options = '-std=c11 -Wall -Iinc -Iinclude'
  let g:ale_c_gcc_options = '-std=c11 -Wall -Iinc -Iinclude'

  let g:ale_cpp_clang_options = '-std=c++14 -Wall -Iinc -Iinclude -Imockinc'
  let g:ale_cpp_gcc_options = '-std=c++14 -Wall -Iinc -Iinclude -Imockinc'

  let g:ale_python_mypy_options = '-s'

  let g:ale_lint_on_enter = 0
  let g:ale_lint_on_save = 1
  let g:ale_lint_on_text_changed = 0
  let g:ale_set_quickfix = 1    "for quickfix
  let g:ale_open_list = 1   "for quickfix
  nmap <silent> <C-k> <Plug>(ale_previous_wrap)
  nmap <silent> <C-j> <Plug>(ale_next_wrap)
'''


#  # [[plugins]]
#  # repo = 'fuenor/qfixhowm'
#  # hook_add = '''
#  #   let QFixHowm_key = 'g'
#  #   let howm_dir = '~/Dropbox/memo/howm'
#  #   let howm_filename      = '%Y/%m/%Y-%m-%d-%H%M%S.howm'
#  #   let howm_fileencoding  = 'utf-8'
#  #   let howm_fileformat    = 'unix'
#  #   let QFixHowm_DiaryFile = 'diary/%Y/%m/%Y-%m-%d-000000.howm'
#  # '''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = 'has("nvim")'
if = 'has("python3")'
# on_event = 'InsertEnter'
on_event = 'InsertcharPre'
hook_source = '''
  let g:deoplete#enable_at_startup = 1
"    let g:deoplete#max_list = 5
"    let g:deoplete#auto_complete_start_length = 3
"    "let g:deoplete#enable_camel_case = 0
"    "let g:deoplete#enable_ignore_case = 0
"    "let g:deoplete#enable_refresh_always = 0
"    "let g:deoplete#enable_smart_case = 1
"    "let g:deoplete#file#enable_buffer_path = 1

  inoremap <expr><tab> pumvisible() ? "\<C-n>" :
    \  neosnippet#expandable_or_jumpable() ?
    \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
hook_post_source = '''
  let g:deoplete#omni_patterns = {}
'''

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
if = 'has("nvim")'
depends = 'neomru.nvim'

# [[plugins]]
# repo = 'Yggdroot/indentLine'
# hook_source = '''
#   "let g:indentLine_setConceal = 0
#   let g:indentLine_color_term = 333
#   let g:indentLine_color_gui = '#909090'
#   let g:indentLine_setColors = 0
#   let g:indentLine_bgcolor_term = 333
#   "let g:indentLine_char = '='
#   "nmap <silent><Leader>i :<C-u>IndentLinesToggle<CR>
# '''
#  # let g:indentLine_color_term = 111
#  # let g:indentLine_color_gui = '#909090'

# }}} others


[[plugins]]
repo = 'editorconfig/editorconfig-vim'


[[plugins]]
repo = 'vim-scripts/gtags.vim'
