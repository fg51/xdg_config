[[plugins]]
repo = 'Shougo/context_filetype.vim'

# status bar {{{
[[plugins]]
repo = 'itchyny/lightline.vim'
depends = ['coc']
hook_add = '''
  let g:lightline = {
    \ 'colorscheme': 'onedark',
    \ 'active': {
      \ 'left': [
        \ ['mode', 'paste' ],
        \ ['readonly', 'filename', 'modified'],
        \ ['linter_checking', 'linter_errors', 'linter_warnings', 'linter_ok'],
        \ ['cocstatus'],
      \ ],
    \ },
    \ 'component_function': {
    \   'cocstatus': 'coc#status'
    \ },
  \ }
'''

# [[plugins]]
# repo = 'maximbaz/lightline-ale'
# depends = ['lightline.vim', 'ale']
# hook_add = '''
#   let g:lightline.component_expand = {
#   \ 'linter_checking': 'lightline#ale#checking',
#   \ 'linter_warnings': 'lightline#ale#warnings',
#   \ 'linter_errors': 'lightline#ale#errors',
#   \ 'linter_ok': 'lightline#ale#ok',
#   \ }
#   let g:lightline.component_type = {
#   \ 'linter_checking': 'left',
#   \ 'linter_warnings': 'warning',
#   \ 'linter_errors': 'error',
#   \ 'linter_ok': 'left',
#   \ }
# '''
# }}} status bar

# # colorscheme {{{
# [[plugins]]
# repo = 'tomasr/molokai'
# #repo = 'crusoexia/vim-monokai'
# #on_event=['VimEnter']
# hook_add = '''
# let g:molokai_original = 1
# '''

[[plugins]]
repo = 'joshdick/onedark.vim'
hook_add = '''
colorscheme onedark

highlight normal guibg=none
highlight nontext guibg=none
highlight linenr guibg=none
highlight folded guibg=none
highlight endofbuffer guibg=none
'''

# # [[plugins]]
# # repo = 'sickill/vim-monokai'
# # }}} colorscheme


# Input {{{

[[plugins]]
repo = 'honza/vim-snippets'
# }}} define file

[[plugins]]
repo = 'SirVer/ultisnips'
# hook_source = '''
#   let g:UltiSnipsExpandTrigger='<c-k>'
# '''

[[plugins]]
repo = 'tpope/vim-surround'
# }}} Input


# code check {{{
# [[plugins]]
# repo = 'dense-analysis/ale'
# hook_add = '''
#   let g:ale_linters = {
#     \ 'python': ['pylint', 'mypy', 'pycodestyle', 'pyflakes', 'pyls', ],
#   \}
#   let g:ale_fixers = {
#     \ 'javascript': ['eslint', ],
#     \ 'typescript': ['eslint', ],
#   \}
#
#   let g:ale_c_clang_options = '-std=c11 -Wall -Iinc -Iinclude'
#   let g:ale_c_gcc_options = '-std=c11 -Wall -Iinc -Iinclude'
#
#   let g:ale_cpp_clang_options = '-std=c++14 -Wall -Iinc -Iinclude -Imockinc'
#   let g:ale_cpp_gcc_options = '-std=c++14 -Wall -Iinc -Iinclude -Imockinc'
#
#   let g:ale_python_mypy_options = '--ignore-missing-imports'
#
#   let g:ale_lint_on_enter = 0
#   let g:ale_lint_on_save = 1
#   let g:ale_lint_on_text_changed = 0
#   let g:ale_sign_column_always = 1
#   let g:ale_set_loclist = 0
#   let g:ale_set_quickfix = 1    "for quickfix
#   let g:ale_open_list = 1   "for quickfix
#   let g:ale_list_window_size = 5
#   " let g:ale_completion_enabled = 1
#   let g:ale_echo_msg_error_str = 'E'
#   let g:ale_echo_msg_warning_str = 'W'
#   let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
#   let g:ale_statusline_format = ['E%d', 'W%d', 'ok']
#   nmap <silent> <C-k> <Plug>(ale_previous_wrap)
#   nmap <silent> <C-j> <Plug>(ale_next_wrap)
# '''

# }}} others


[[plugins]]
repo = 'editorconfig/editorconfig-vim'


[[plugins]]
repo = 'vim-scripts/gtags.vim'


# [[plugins]]
# repo = 'autozimu/LanguageClient-neovim'
# rev = 'next'
# depends = ['context_filetype']
# build = 'bash install.sh'
# hook_source = '''
#   let g:LanguageClient_serverCommands = {
#   \ 'python': ['pyls'],
#   \ 'rust': ['rustup', 'run', 'beta', 'rls'],
#   \ 'vue': ['vls'],
#   \ 'html': [],
#   \ 'javascript': ['javascript-typescript-stdio', ],
#   \ 'typescript': ['javascript-typescript-stdio', ],
#   \ 'css': [],
#   \ }
#   let g:LanguageClient_autoStart = 1
#   let g:LanguageClient_diagnosticsEnable = 0
#   nnoremap <silent> K :call LanguageClient_textDocument_hover()<CR>
#   nnoremap <silent> gd :call LanguageClient_textDocument_definition()<CR>
#   nnoremap <silent> <F2> :call LanguageClient_textDocument_rename()<CR>
# '''

# syntax
[[plugins]]
repo = 'sheerun/vim-polyglot'
hook_add = '''
  let g:rustfmt_autosave = 1
'''


[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
hook_add = '''
  set updatetime=300
  if has("patch-8.1.1564")
    set signcolumn=number
  else
    set signcolumn=yes
  endif
'''
